{"ast":null,"code":"const baseUrl = window.location.origin;\nconst index = baseUrl.indexOf(\".\");\nconst url = index === -1 ? \"http://localhost:8000\" : baseUrl;\nconst apiNetworkInterface = {\n  development: url\n};\nconst Yoga = {\n  API_ROOT: apiNetworkInterface[process.env.REACT_APP_ENV] || apiNetworkInterface.development,\n\n  resultDto(statusCode, message, result) {\n    return {\n      statusCode,\n      message,\n      result\n    };\n  },\n\n  getApiUrlFromRoot(url) {\n    return this.API_ROOT + url;\n  },\n\n  getMockUrl(url) {\n    return apiNetworkInterface.mock + url;\n  },\n\n  getHeaders(headers) {\n    const HEADERS = {\n      JSON: {\n        \"Content-Type\": \"application/json\"\n      },\n      URL_ENCODED: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      MULTIPART_FORM_DATA: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      TEXT_HTML: {\n        \"Content-Type\": \"text/html\"\n      },\n      OCTET_STREAM: {\n        \"Content-Type\": \"application/octet-stream\"\n      },\n      XML: {\n        \"Content-Type\": \"application/json, text/plain, */*\"\n      }\n    };\n\n    function getHeaders() {\n      let headerObj = [];\n      headers.forEach(item => {\n        const header = HEADERS[item];\n        headerObj = Object.assign(headerObj, header);\n      });\n      return headerObj;\n    }\n\n    return getHeaders();\n  }\n\n};\nexport default Yoga;","map":{"version":3,"sources":["/home/joyesh/Documents/Yoga_Studio_NodeJs/Frontend/src/GlobalConfig.js"],"names":["baseUrl","window","location","origin","index","indexOf","url","apiNetworkInterface","development","Yoga","API_ROOT","process","env","REACT_APP_ENV","resultDto","statusCode","message","result","getApiUrlFromRoot","getMockUrl","mock","getHeaders","headers","HEADERS","JSON","URL_ENCODED","MULTIPART_FORM_DATA","TEXT_HTML","OCTET_STREAM","XML","headerObj","forEach","item","header","Object","assign"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhC;AACA,MAAMC,KAAK,GAAGJ,OAAO,CAACK,OAAR,CAAgB,GAAhB,CAAd;AACA,MAAMC,GAAG,GAAGF,KAAK,KAAK,CAAC,CAAX,GAAe,uBAAf,GAAyCJ,OAArD;AACA,MAAMO,mBAAmB,GAAG;AAC1BC,EAAAA,WAAW,EAAEF;AADa,CAA5B;AAIA,MAAMG,IAAI,GAAG;AACXC,EAAAA,QAAQ,EACNH,mBAAmB,CAACI,OAAO,CAACC,GAAR,CAAYC,aAAb,CAAnB,IACAN,mBAAmB,CAACC,WAHX;;AAIXM,EAAAA,SAAS,CAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,EAA8B;AACrC,WAAO;AACLF,MAAAA,UADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA;AAHK,KAAP;AAKD,GAVU;;AAWXC,EAAAA,iBAAiB,CAACZ,GAAD,EAAM;AACrB,WAAO,KAAKI,QAAL,GAAgBJ,GAAvB;AACD,GAbU;;AAcXa,EAAAA,UAAU,CAACb,GAAD,EAAM;AACd,WAAOC,mBAAmB,CAACa,IAApB,GAA2Bd,GAAlC;AACD,GAhBU;;AAiBXe,EAAAA,UAAU,CAACC,OAAD,EAAU;AAClB,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE;AACJ,wBAAgB;AADZ,OADQ;AAIdC,MAAAA,WAAW,EAAE;AACX,wBAAgB;AADL,OAJC;AAOdC,MAAAA,mBAAmB,EAAE;AACnB,wBAAgB;AADG,OAPP;AAUdC,MAAAA,SAAS,EAAE;AACT,wBAAgB;AADP,OAVG;AAadC,MAAAA,YAAY,EAAE;AACZ,wBAAgB;AADJ,OAbA;AAgBdC,MAAAA,GAAG,EAAE;AACH,wBAAgB;AADb;AAhBS,KAAhB;;AAoBA,aAASR,UAAT,GAAsB;AACpB,UAAIS,SAAS,GAAG,EAAhB;AACAR,MAAAA,OAAO,CAACS,OAAR,CAAgBC,IAAI,IAAI;AACtB,cAAMC,MAAM,GAAGV,OAAO,CAACS,IAAD,CAAtB;AACAF,QAAAA,SAAS,GAAGI,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBG,MAAzB,CAAZ;AACD,OAHD;AAIA,aAAOH,SAAP;AACD;;AACD,WAAOT,UAAU,EAAjB;AACD;;AA/CU,CAAb;AAkDA,eAAeZ,IAAf","sourcesContent":["const baseUrl = window.location.origin;\nconst index = baseUrl.indexOf(\".\");\nconst url = index === -1 ? \"http://localhost:8000\" : baseUrl;\nconst apiNetworkInterface = {\n  development: url\n};\n\nconst Yoga = {\n  API_ROOT:\n    apiNetworkInterface[process.env.REACT_APP_ENV] ||\n    apiNetworkInterface.development,\n  resultDto(statusCode, message, result) {\n    return {\n      statusCode,\n      message,\n      result\n    };\n  },\n  getApiUrlFromRoot(url) {\n    return this.API_ROOT + url;\n  },\n  getMockUrl(url) {\n    return apiNetworkInterface.mock + url;\n  },\n  getHeaders(headers) {\n    const HEADERS = {\n      JSON: {\n        \"Content-Type\": \"application/json\"\n      },\n      URL_ENCODED: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      MULTIPART_FORM_DATA: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      TEXT_HTML: {\n        \"Content-Type\": \"text/html\"\n      },\n      OCTET_STREAM: {\n        \"Content-Type\": \"application/octet-stream\"\n      },\n      XML: {\n        \"Content-Type\": \"application/json, text/plain, */*\"\n      }\n    };\n    function getHeaders() {\n      let headerObj = [];\n      headers.forEach(item => {\n        const header = HEADERS[item];\n        headerObj = Object.assign(headerObj, header);\n      });\n      return headerObj;\n    }\n    return getHeaders();\n  }\n};\n\nexport default Yoga;\n"]},"metadata":{},"sourceType":"module"}